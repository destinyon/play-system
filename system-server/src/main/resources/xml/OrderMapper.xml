<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.OrderMapper">

  <resultMap id="OrderResult" type="com.example.entity.OrderInfo">
    <id property="id" column="id" />
    <result property="orderNo" column="order_no" />
    <result property="userId" column="user_id" />
    <result property="deliverymanId" column="deliveryman_id" />
    <result property="restaurateurId" column="restaurateur_id" />
    <result property="restaurantId" column="restaurant_id" />
    <result property="status" column="status" />
    <result property="remark" column="remark" />
    <result property="deliveryAddress" column="delivery_address" />
    <result property="totalAmount" column="total_amount" />
    <result property="createdAt" column="created_at" />
    <result property="updatedAt" column="updated_at" />
  </resultMap>

  <select id="listByRestaurateur" parameterType="int" resultMap="OrderResult">
    SELECT *
    FROM order_info
    WHERE restaurateur_id = #{restaurateurId}
    ORDER BY COALESCE(updated_at, created_at) DESC
  </select>

  <select id="listByGuest" parameterType="int" resultMap="OrderResult">
    SELECT *
    FROM order_info
    WHERE user_id = #{userId}
    ORDER BY COALESCE(updated_at, created_at) DESC
  </select>

  <select id="listByDeliveryman" parameterType="int" resultMap="OrderResult">
    SELECT *
    FROM order_info
    WHERE deliveryman_id = #{deliverymanId}
    ORDER BY COALESCE(updated_at, created_at) DESC
  </select>

  <select id="getById" parameterType="int" resultMap="OrderResult">
    SELECT *
    FROM order_info
    WHERE id = #{id}
  </select>

  <select id="pageByStatus" resultMap="OrderResult">
    SELECT *
    FROM order_info
    WHERE restaurateur_id = #{restaurateurId}
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
      <if test="keyword != null and keyword != ''">
        AND (
          order_no LIKE CONCAT('%', #{keyword}, '%')
          OR remark LIKE CONCAT('%', #{keyword}, '%')
          OR delivery_address LIKE CONCAT('%', #{keyword}, '%')
        )
      </if>
    ORDER BY
      CASE status
        WHEN 'PENDING' THEN 1
        WHEN 'IN_PROGRESS' THEN 2
        WHEN 'READY' THEN 3
        WHEN 'COMPLETED' THEN 4
        ELSE 5
      END,
      COALESCE(updated_at, created_at) DESC
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <select id="countByStatus" resultType="long">
    SELECT COUNT(1)
    FROM order_info
    WHERE restaurateur_id = #{restaurateurId}
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
      <if test="keyword != null and keyword != ''">
        AND (
          order_no LIKE CONCAT('%', #{keyword}, '%')
          OR remark LIKE CONCAT('%', #{keyword}, '%')
          OR delivery_address LIKE CONCAT('%', #{keyword}, '%')
        )
      </if>
  </select>

  <select id="countGroupByStatus" resultType="com.example.dto.OrderStatusCount">
    SELECT status, COUNT(1) AS total
    FROM order_info
    WHERE restaurateur_id = #{restaurateurId}
    GROUP BY status
  </select>

  <update id="updateStatus">
    UPDATE order_info
    SET status = #{toStatus},
        updated_at = CURRENT_TIMESTAMP
    WHERE id = #{orderId}
      AND status = #{fromStatus}
  </update>

</mapper>
